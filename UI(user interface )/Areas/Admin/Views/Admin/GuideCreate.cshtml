@model Mixed_Models.GuideCustomModel


@{
    ViewBag.Title = "AdminCreate";
    Layout = "~/Views/Shared/_AdminPannelLayout.cshtml";
}

<head>

    <link href="~/DashBoard/template/assets/css/addPackage.css" rel="stylesheet" />
    <link href="~/my_css/RegistrationForms.css" rel="stylesheet" />
</head>


<div class="col-lg=8 col-md-8 AddPackageToDiv">
    <div class="sb2-2-add-blog sb2-2-1">
        <div class="box-inn-sp">
            <div class="inn-title">

                @if (TempData["Guide_Created"] != null)
                {
                    <div class="alert alert-success alert-dismissible" role="alert">
                        <button type="button" class="close" data-dismiss="alert" aria-label="Close"><span aria-hidden="true">×</span></button>
                        <i class="fa fa-check-circle"></i>  @TempData["Guide_Created"]

                    </div>
                }
                else if (TempData["Guide_Not_Created"] != null)
                {

                    <div class="alert alert-danger alert-dismissible" role="alert">
                        <button type="button" class="close" data-dismiss="alert" aria-label="Close"><span aria-hidden="true">×</span></button>
                        <i class="fa fa-times-circle"></i> @TempData["Guide_Not_Created"]
                    </div>

                }
                else
                {
                    <h4> Create New Guide </h4>
                }





            </div>
            <div class="bor">

                @using (Html.BeginForm("GuideCreate", "Admin", new { area = "Admin" }, FormMethod.Post, new { enctype = "multipart/form-data" }))
                {

                    <div class="row">
                        <div class="input-field col s12">
                            @Html.EditorFor(model => model.Guide.Name, new { htmlAttributes = new { id = "list-title", type = "text", @class = "validate FontSize", placeholder = " Name Of Guide" } })
                            @Html.ValidationMessageFor(model => model.Guide.Name, "", new { @class = "text-danger" })
                        </div>
                    </div>


                    <div class="row">
                        <div class="input-field col s12">
                            @Html.EditorFor(model => model.Guide.Age, new { htmlAttributes = new { id = "list-title", @class = "materialize-textarea FontSize", placeholder = "Age Of Guide" } })
                            @Html.ValidationMessageFor(model => model.Guide.Age, "", new { @class = "text-danger" })
                        </div>
                    </div>


                    <div class="row">
                        <div class="input-field col s12">
                            @Html.EditorFor(model => model.Guide.Gender, new { htmlAttributes = new { id = "list-title", @class = "materialize-textarea FontSize", placeholder = "Gender Of Guide" } })
                            @Html.ValidationMessageFor(model => model.Guide.Gender, "", new { @class = "text-danger" })
                        </div>
                    </div>


                    <div class="row">
                        <div class="input-field col s12">
                            @Html.EditorFor(model => model.Guide.Experience, new { htmlAttributes = new { id = "list-title", @class = "materialize-textarea FontSize", placeholder = "Total Experience" } })
                            @Html.ValidationMessageFor(model => model.Guide.Experience, "", new { @class = "text-danger" })
                        </div>
                    </div>


                    <div class="row">
                        <div class="input-field col s12">
                            @Html.EditorFor(model => model.Guide.Total_Tours, new { htmlAttributes = new { id = "list-title", @class = "materialize-textarea FontSize", placeholder = "Number Of tours" } })
                            @Html.ValidationMessageFor(model => model.Guide.Total_Tours, "", new { @class = "text-danger" })
                        </div>
                    </div>



                    <div class="row">
                        <div class="input-field col s12">
                            @Html.EditorFor(model => model.Guide.Govt_License, new { htmlAttributes = new { id = "list-title", @class = "materialize-textarea FontSize", placeholder = "Govt_License" } })
                            @Html.ValidationMessageFor(model => model.Guide.Govt_License, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="row">
                        <div class="input-field col s12">
                            @Html.EditorFor(model => model.Guide.Charges, new { htmlAttributes = new { id = "list-title", @class = "materialize-textarea FontSize", placeholder = "Charges" } })
                            @Html.ValidationMessageFor(model => model.Guide.Charges, "", new { @class = "text-danger" })
                        </div>
                    </div>





                    <div class="row">
                        <div class="input-field col s12">

                            <div class="file-field">
                                <div class="btn">
                                    <span>File</span>

                                    <input type="file" class="upload-button" name="UserImageFiles">
                                </div>
                                <div class="file-path-wrapper">

                                    <input class="file-path validate FontSize" type="text" placeholder="Upload Loctaion Image">
                                </div>
                            </div>
                        </div>
                    </div>



                    @*//Image Div*@
                    <div class="col-lg-7" style="overflow-x: hidden; padding-left: 0;     margin-bottom: 22px; ">



                        <div class="col-md-11" style=" overflow-x: hidden; padding: 0; overflow-y: hidden;">

                            <div class="user_img">


                                <img src="~/Images/No_Image_Available.jpg" class="img-responsive upload-img-Js" style="width: 100%;">


                                <div class="upload_icon image-up-js">
                                    <p class="upload-img-text">Uplaod image here</p>
                                </div>



                                <div class="cross close-x-js">
                                    <span aria-hidden="true" style="font-size: 20px; color: #7f848a;">&times;</span>
                                </div>
                            </div>

                        </div>

                    </div>



                    <div class="row">
                        <div class="input-field col s12">
                            <i class="waves-effect waves-light btn-large waves-input-wrapper" style=""><input type="submit" class="waves-button-input" value="Submit"></i>
                        </div>
                    </div>

                }



            </div>
        </div>
    </div>

</div>
<script src="~/Scripts/jquery-3.5.1.min.js"></script>
<script src="~/Scripts/jquery.validate.min.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>

<script type="text/javascript">



    $(document).ready(function () {

        $(".upload-img-Js").click(function () {

            uploadimage();
        });


        $('.image-up-js').click(function () {
            uploadimage();
        });


        function uploadimage() {

            $('.upload-button').trigger('click');
        }

        $('.upload-button').change(function () {
            if (this.files && this.files[0]) {
                var fileReader = new FileReader();

                //FilerReader webapp ko user k computer say file read krne mai madad deta hai
                fileReader.readAsDataURL(this.files[0]);

                //filerader.onload mtlb jab file load ho jaye
                fileReader.onload = function (x) {
                    //new image () image ka constructor hai jis image ka obj initilaize hoga   image = <img src="" width="" heifht="">
                    var image = new Image();

                    //x(event) .targer.result ka mtlb h x(event) jo target huwa hai is result m wo value ai gi jis ki waja say event tagert huwa
                    image.src = x.target.result;

                    image.onload = function () {
                        var width = this.width;
                        var height = this.height;
                        //alert("width :" + width + "height :" + height + "type :" + type );

                        if (width <= "3500" && height <= "2933") {

                            $('.upload-img-Js').attr('src', x.target.result);

                            $('.upload-img-Js').css({ 'width': '100%', 'height': '315px' });

                            //X thore disturb ho jata tha after image upload ye line us ki setting k leye hai
                            //$(".clossing-smybol").css({ "left": "290px", "bottom": "320px" });

                        }
                        else {
                            $('.alert-custom').css('visibility', 'visible');
                        }
                    }

                    $('.close-x-js').click(function () {
                        $('.upload-img-Js').attr('src', "/Images/No_Image_Available.jpg");

                        //Ham datab base ki field jaise imagepath ko bhi javascript k zarye # use kr k access kr skty hn jaise nechay kia
                        //$('#Packages.ImagePath').val("/images/No_Image_Available.jpg");
                        //jab X pe click ho to httpfilesbase mai jo hai usko null kr do id j zarye
                        $('.upload-button').val(null);
                    });


                }
            }
        });

    });


</script>