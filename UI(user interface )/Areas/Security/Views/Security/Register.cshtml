@model UI_user_interface__.Models.MyCustomModelsUi

@{
    ViewBag.Title = "Register";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
    <


<head>



    <link href="~/my_css/RegistrationForm.css" rel="stylesheet" />



</head>

@if (TempData["success"] != null)
{

    <div class="alert alert-success" role="alert">

        @TempData["success"]

    </div>

}




<div class="container mainContainer">

    <div class="row">



        <div class="col-md-6 " id="form">





            @*@using (Html.BeginForm("Register", "Security", new { area = "Security" }, FormMethod.Post , new {enctype = "multipart/form-data"  }))*@

            @using (Html.BeginForm("Register", "Security", FormMethod.Post, new { enctype = "multipart/form-data" }))
            {

                <h3>  REGISTRATION FORM</h3>

                <div class="form-group row control-label">

                    @Html.LabelFor(model => model.MyUser.Name  , htmlAttributes: new { @class = "col-sm-2  col-form-label font-weight-bold" })

                    <div class="col-sm-10">

                        @Html.EditorFor(model => model.MyUser.Name , new { HtmlAttributes = new { @class = "form-control inputfield" } })

                        @Html.ValidationMessageFor(model => model.MyUser.Name , "", new { @class = "text-danger" })

                    </div>

                </div>



                <div class="form-group row control-label">

                    @Html.LabelFor(model => model.MyUser.Email, htmlAttributes: new { @class = "control-label col-md-2 font-weight-bold" })

                    <div class="col-sm-10">
                        @Html.EditorFor(model => model.MyUser.Email, new { HtmlAttributes = new { @class = "form-control inputfield" } })

                        @Html.ValidationMessageFor(model =>model.MyUser.Email, "", new { @class = "text-danger" })

                    </div>

                </div>



                <div class="form-group row control-label">

                    @Html.LabelFor(model => model.MyUser.Password, htmlAttributes: new { @class = "control-label col-md-2 font-weight-bold" })

                    <div class="col-sm-10">
                        @Html.EditorFor(model =>model.MyUser.Password, new { HtmlAttributes = new { @class = "form-control inputfield" } })

                        @Html.ValidationMessageFor(model => model.MyUser.Password, "", new { @class = "text-danger" })
                    </div>

                </div>



                <div class="form-group row control-label">

                    @Html.LabelFor(model => model.MyUser.Gender, htmlAttributes: new { @class = "control-label col-md-2 font-weight-bold " })



                    <div class="col-sm-10">
                        <label class="radio-inline">



                            @Html.RadioButtonFor(model => model.MyUser.Gender, "Male", new { HtmlAttributes = new { @class = "form-control inputfield" } })

                            Male
                        </label>



                        <label class="radio-inline">
                            @Html.RadioButtonFor(model => model.MyUser.Gender, "Female", new { HtmlAttributes = new { @class = "form-control inputfield" } })
                            Female
                        </label>
                    </div>

                    @Html.ValidationMessageFor(model => model.MyUser.Gender, "", new { @class = "text-danger span-margin" })
                </div>





                <div class="form-group row control-label">

                    <label class="control-label col-md-2 font-weight-bold">  Course  </label>



                    <div class="col-sm-10">

                        <label class="checkbox-inline">



                            @Html.CheckBox("Csharp", false)
                            Csharp
                        </label>

                        <label class="checkbox-inline">

                            @Html.CheckBox("Java", false)
                            Java
                        </label>


                        <label class="checkbox-inline">

                            @Html.CheckBox("Python", false)
                            Python
                        </label>
                    </div>
                    @if (TempData["CheckBoxError"] != null)
                    {

                        <span class="text-danger span-margin"> @TempData["CheckBoxError"]</span>

                    }

                </div>




                <div class="form-group row control-label">

                    <label class="control-label col-md-2 font-weight-bold ">City</label>

                    <div class="col-sm-10">
                        @Html.DropDownListFor(model => model.MyCity.CityId, ViewBag.city as SelectList, "-- Select Your City --", new { @class = "form-control col-md-12" })
                        @Html.ValidationMessageFor(model => model.MyCity.CityId, "", new { @class = "text-danger" })

                    </div>

                </div>





                <div class="form-group row control-label">

                    <label class="control-label col-md-2 font-weight-bold">DOB</label>

                    <div class="col-sm-10">

                        @Html.EditorFor(model => model.MyUser.DBO, new { HtmlAttributes = new { @class = "form-control datetimepicker1", autocomplete = "off" } })

                        @*@Html.ValidationMessageFor(model =>  model.MyUser.DBO, "", new { @class = "text-danger" })*@

                    </div>

                </div>

                <input type="file" class="upload-button" name="UserImageFiles" accept="image/*" />
                //style="visibility:hidden"

                @*<input type="file" name="UploadFile" class="upload-button" accept="image/*"  style="visibility:hidden"/>*@

                <div class="form-group col-md-12">

                    <div class="input-group">


                        <input type="submit" class="btn btn-primary col-md-offset-10 subbtn" />
                    </div>

                </div>





            }




        </div>



        <div class="col-md-6 " id="formImg2">



            <div class="image-container" style="width:86%;">






                <img src="~/imgaes/No_Image_Available.jpg" class="img-responsive upload-img" />




                <div class="image-up row ">


                    <i class="fas fa-camera icon-camera"></i>

                    <p class="upload-img-text">Uplaod image here</p>

                </div>

                <div class="clossing-smybol close-x">
                    <span aria-hidden="true" style="font-size: 20px;">&times;</span>

                </div>



                <div class="alert alert-danger alert-custom"><p>only 3500 , 2900 pixel image is allowed </p></div>


            </div>




            <div style="margin-top:-60px; margin-left:51px;">
                @Html.ValidationMessageFor(model => model.UserImageFiles, "", new { @class = "text-danger span-margin" })


            </div>

        </div>

    </div>



</div>



<script src="~/Scripts/jquery-3.5.1.min.js"></script>

<script type="text/javascript">


    $('.upload-img').click(function () {

        uploadimage();

    });



    $('.image-up').click(function () {

        uploadimage();

    });


    function uploadimage() {

        $('.upload-button').trigger('click');
    }



    $('.upload-button').change(function () {


        if (this.files && this.files[0]) {

            var fileReader = new FileReader();

            //FilerReader webapp ko user k computer say file read krne mai madad deta hai

            fileReader.readAsDataURL(this.files[0]);

            //filerader.onload mtlb jab file load ho jaye

            fileReader.onload = function (x) {

                //new image () image ka constructor hai jis image ka obj initilaize hoga   image = <img src="" width="" heifht="">

                var image = new Image();

                //x(event) .targer.result ka mtlb h x(event) jo target huwa hai is result m wo value ai gi jis ki waja say event tagert huwa

                image.src = x.target.result;

                image.onload = function () {

                    var width = this.width;
                    var height = this.height;



                    //alert("width :" + width + "height :" + height + "type :" + type );

                    if (width <= "3500" && height <= "2933") {

                        $('.upload-img').attr('src', x.target.result);

                        $('.upload-img').css({ 'width': '100%', 'height': '315px' });

                    }
                    else {

                        $('.alert-custom').css('visibility', 'visible');
                    }

                }





            }
        }


        $('.close-x').click(function () {

            $('.upload-img').attr('src', "/imgaes/No_Image_Available.jpg");


        });

    });

</script>


@*jquery automatic validation*@

@*<script src="~/Scripts/jquery.validate.min.js"></script>
    <script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>*@